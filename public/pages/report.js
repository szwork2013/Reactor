// Generated by CoffeeScript 1.6.3
(function() {
  var clone_dom, clone_header_footer, clone_level, clone_title, count_num, group_title_continue, layout_count, page_class, part, process, summary_special, title_group_add_title, _i, _j, _len, _len1, _ref, _ref1;

  layout_count = 1;

  group_title_continue = function(group_name, word, title_name) {
    if (title_name == null) {
      title_name = '.change_level';
    }
    return $(group_name).find(title_name).each(function(index, value) {
      var last_title, num;
      if (index !== 0) {
        last_title = $($(group_name).find(title_name).get(index - 1)).text();
        num = last_title.indexOf(word);
        if (num > 0) {
          last_title = last_title.substr(0, num);
        }
        if ($(this).text() === last_title) {
          return $(this).text($(this).text() + word);
        }
      }
    });
  };

  title_group_add_title = function(page, attr_name, replace_dom, clone_level) {
    return $(page).each(function(index, value) {
      var since_title, title;
      if (!$(this).next().find("[level=" + clone_level + "]").first().hasClass(attr_name)) {
        if ($(this).next().find('.container > div:eq(0)').attr('class') !== 'note-title') {
          title = $(this).find("." + attr_name).last().clone();
          since_title = $(this).next().find("[level=" + clone_level + "]").first().contents();
          $(title).find(replace_dom).replaceWith(since_title);
          return $(this).next().find("[level=" + clone_level + "]").first().replaceWith(title);
        }
      }
    });
  };

  clone_header_footer = function(page, part, dom_arr) {
    var header_arr;
    if (dom_arr == null) {
      dom_arr = ['.clone'];
    }
    header_arr = [];
    return $(page).find(part).each(function(index) {
      var add_dom, dom, _i, _j, _len, _len1, _results, _results1;
      if (index === 0) {
        _results = [];
        for (_i = 0, _len = dom_arr.length; _i < _len; _i++) {
          dom = dom_arr[_i];
          _results.push(header_arr.push($(this).find(dom).clone()));
        }
        return _results;
      } else {
        _results1 = [];
        for (_j = 0, _len1 = header_arr.length; _j < _len1; _j++) {
          add_dom = header_arr[_j];
          _results1.push($(this).append(add_dom.clone()));
        }
        return _results1;
      }
    });
  };

  summary_special = function(page, dom_class) {
    return $(page).each(function(index, value) {
      return $(this).find(dom_class).last().replaceWith($(this).find(dom_class).first().clone());
    });
  };

  count_num = (function() {
    var close_bag;
    close_bag = function() {
      return layout_count++;
    };
    return close_bag;
  })();

  clone_dom = function(clone_page, parallel_layout_dom, count) {
    var new_page;
    new_page = clone_page.get(0).cloneNode();
    if ((parallel_layout_dom == null) || count % 2 === 0) {
      $(clone_page).contents().each(function(index, value) {
        return $(new_page).append($(this).get(0).cloneNode());
      });
    }
    if (count % 2 === 0) {
      $(new_page).find('.container').append($(parallel_layout_dom).first().get(0).cloneNode());
    }
    return new_page;
  };

  clone_level = function(level, row) {
    row = $(row).prev();
    while (row.length && $(row).attr('level') !== level.toString()) {
      row = $(row).prev();
    }
    if ($(row).attr('level') === level.toString()) {
      row = row.clone();
    }
    return row;
  };

  clone_title = function(max_level, newpage_custom_method, index, row, rows, next_page, content_dom, parallel_layout_dom, count, page) {
    var clone_array, dom, idx, level_array, _i, _j, _k, _len, _len1, _ref;
    level_array = [];
    if (parallel_layout_dom != null) {
      content_dom = parallel_layout_dom;
    }
    if (newpage_custom_method != null) {
      for (idx = _i = 0, _ref = max_level - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; idx = 0 <= _ref ? ++_i : --_i) {
        level_array.push(clone_level(idx, row));
      }
    }
    clone_array = newpage_custom_method(level_array, row);
    if ((parallel_layout_dom != null) && count % 2 !== 0) {
      for (_j = 0, _len = clone_array.length; _j < _len; _j++) {
        dom = clone_array[_j];
        $(next_page).append(dom);
      }
      $(next_page).append(rows.slice(index));
      return page;
    } else {
      for (_k = 0, _len1 = clone_array.length; _k < _len1; _k++) {
        dom = clone_array[_k];
        $(next_page).find(content_dom).append(dom);
      }
      $(next_page).find(content_dom).append(rows.slice(index));
      return next_page;
    }
  };

  process = function(page, newpage_custom_method, parallel_layout_dom) {
    var count, height, index, max_level, next_page, row, rows, this_row, _i, _j, _len, _len1;
    if (parallel_layout_dom != null) {
      rows = $(page).find(parallel_layout_dom).last().contents();
    } else {
      rows = $(page).find('.container').contents();
    }
    if (newpage_custom_method != null) {
      max_level = 0;
      for (index = _i = 0, _len = rows.length; _i < _len; index = ++_i) {
        row = rows[index];
        this_row = parseInt($(row).attr('level'));
        max_level = this_row > max_level ? this_row : max_level;
      }
    }
    height = parseFloat($(page).find('.container').css('height'));
    for (index = _j = 0, _len1 = rows.length; _j < _len1; index = ++_j) {
      row = rows[index];
      if (rows.length - 1 === index) {
        layout_count = 1;
      }
      if (!($(row).position().top + $(row).outerHeight(true) > height)) {
        continue;
      }
      if (parseInt($(row).prev().attr('level')) < parseInt($(row).attr('level'))) {
        row = $(row).prev();
        index--;
      }
      if (parallel_layout_dom) {
        count = count_num();
      }
      if ((parallel_layout_dom != null) && count % 2 !== 0) {
        $(parallel_layout_dom).after(next_page = clone_dom($(parallel_layout_dom), parallel_layout_dom, count));
      } else {
        $(page).after(next_page = clone_dom($(page), parallel_layout_dom, count));
      }
      next_page = clone_title(max_level, newpage_custom_method, index, row, rows, next_page, '.container', parallel_layout_dom, count, page);
      return process(next_page, newpage_custom_method, parallel_layout_dom);
    }
  };

  process($('.summary'), function(level_array) {
    var level0, level1;
    level0 = $(level_array[0]).clone();
    level1 = $(level_array[1]).clone();
    return [level0, level1];
  });

  summary_special('.summary', '.hrdiv');

  process($('.clinic'), function(level_array, row) {
    var dom, new_page_dom, _i, _ref;
    new_page_dom = [];
    for (dom = _i = 0, _ref = parseInt($(row).attr('level') - 1); 0 <= _ref ? _i <= _ref : _i >= _ref; dom = 0 <= _ref ? ++_i : --_i) {
      new_page_dom.push(level_array[dom]);
    }
    return new_page_dom;
  }, '.groupdiv');

  process($('.laboratory'), function(level_array, row) {
    var dom, new_page_dom, _i, _ref;
    new_page_dom = [];
    for (dom = _i = 0, _ref = parseInt($(row).attr('level') - 1); 0 <= _ref ? _i <= _ref : _i >= _ref; dom = 0 <= _ref ? ++_i : --_i) {
      new_page_dom.push(level_array[dom]);
    }
    return new_page_dom;
  });

  title_group_add_title('.laboratory', 'big_combo', 'H3', '2');

  $('.note-title').each(function(index, value) {
    var parent_dom;
    parent_dom = $(value).parent('.container');
    if ($(parent_dom).find('.title').next().attr('class') === 'note-title') {
      $(parent_dom).find('.title').remove();
    }
    if (index === 0 && $(parent_dom).find('.note-title').prev().length > 0) {
      $(parent_dom).append("<div class='note-down'></div>");
      $(parent_dom).find('.note-title').appendTo("div.note-down");
      $(parent_dom).find('.note').appendTo("div.note-down");
    }
    if (index > 0) {
      return $(parent_dom).find('.note-div').next().text($(parent_dom).find('.note-div').next().text() + '（续）');
    }
  });

  _ref = ['.summary', '.clinic', '.laboratory'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    page_class = _ref[_i];
    _ref1 = ['.header', '.footer'];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      part = _ref1[_j];
      clone_header_footer(page_class, part);
    }
    group_title_continue(page_class, '（续）');
  }

  $("div[department='骨密度']").next().next().next().hide();

  $("div[department='超声骨密度']").next().next().next().hide();

}).call(this);
